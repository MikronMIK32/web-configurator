name: Deploy branch manually
on:
  workflow_dispatch:
    inputs:
      devopsBranch:
        description: 'Values branch of https://github.com/MikronMIK32/devops'
        default: "main"
        required: true
env:
  APP_NAME: configurator-front
  REGISTRY_URL: cr.mik32.ru

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Set env.BRANCH
        run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Load devops archive
        run: bash .github/scripts/load_values.sh
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN_FOR_VALUES }}
          COMMIT_ID: ${{ github.sha }}
          DEVOPS_BRANCH: ${{ inputs.devopsBranch }}
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          load: true
          tags: ${{ env.REGISTRY_URL }}/${{ env.APP_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=node:20-alpine
            USER_ID=1001
            GROUP_ID=1001
            APP_NAME=${{ env.APP_NAME }}
            PORT=3000
      - name: Connect to CR
        run: docker login -u root -p ${{ secrets.CR_PASSWORD }} https://${{ env.REGISTRY_URL }}
      - name: Push image to CR
        run: docker push ${{ env.REGISTRY_URL }}/${{ env.APP_NAME }}:latest
      - name: Deploy
        env:
          REF: ${{ github.ref }}
          COMMIT_ID: ${{ github.sha }}
        run: |
          response_code=$(curl -i -H "Accept: application/json" -H "Content-Type: application/json" -X POST -d '{"app":"${{ env.APP_NAME }}","branch": "${{ inputs.devopsBranch }}","is_prod":false,"commit_id":"${{ github.sha }}","repo_name": "FitLab-front"}' -u root:${{ secrets.DEPLOYER_PASSWORD }} https://deployer.mik32.ru/deploy)
          if [ $response_code -ne 200 ]; then
            echo "Error: The curl request returned a status code of $response_code"
            exit 1
          fi
